Index: ../DocPlant/.idea/deploymentTargetDropDown.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../DocPlant/.idea/deploymentTargetDropDown.xml b/../DocPlant/.idea/deploymentTargetDropDown.xml
new file mode 100644
--- /dev/null	(date 1654824262131)
+++ b/../DocPlant/.idea/deploymentTargetDropDown.xml	(date 1654824262131)
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="deploymentTargetDropDown">
+    <targetSelectedWithDropDown>
+      <Target>
+        <type value="QUICK_BOOT_TARGET" />
+        <deviceKey>
+          <Key>
+            <type value="VIRTUAL_DEVICE_PATH" />
+            <value value="$USER_HOME$/.android/avd/Pixel_4_API_31.avd" />
+          </Key>
+        </deviceKey>
+      </Target>
+    </targetSelectedWithDropDown>
+    <timeTargetWasSelectedWithDropDown value="2022-06-07T14:55:12.733240Z" />
+  </component>
+</project>
\ No newline at end of file
Index: ../DocPlant/app/src/main/java/com/dicoding/picodiploma/docplant/util/Utils.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../DocPlant/app/src/main/java/com/dicoding/picodiploma/docplant/util/Utils.kt b/../DocPlant/app/src/main/java/com/dicoding/picodiploma/docplant/util/Utils.kt
new file mode 100644
--- /dev/null	(date 1654824262132)
+++ b/../DocPlant/app/src/main/java/com/dicoding/picodiploma/docplant/util/Utils.kt	(date 1654824262132)
@@ -0,0 +1,37 @@
+package com.dicoding.picodiploma.docplant.util
+
+import android.content.ContentResolver
+import android.content.Context
+import android.net.Uri
+import android.os.Environment
+import java.io.*
+import java.text.SimpleDateFormat
+import java.util.*
+
+private const val FILENAME_FORMAT = "dd-MMM-yyyy"
+
+val timeStamp: String = SimpleDateFormat(
+    FILENAME_FORMAT,
+    Locale.US
+).format(System.currentTimeMillis())
+
+fun createCustomTempFile(context: Context): File {
+    val storageDir: File? = context.getExternalFilesDir(Environment.DIRECTORY_PICTURES)
+    return File.createTempFile(timeStamp, ".jpg", storageDir)
+}
+
+fun uriToFile(selectedImg: Uri, context: Context): File {
+    val contentResolver: ContentResolver = context.contentResolver
+    val myFile = createCustomTempFile(context)
+
+    val inputStream = contentResolver.openInputStream(selectedImg) as InputStream
+    val outputStream: OutputStream = FileOutputStream(myFile)
+    val buf = ByteArray(1024)
+    var len: Int
+
+    while (inputStream.read(buf).also { len = it } > 0) outputStream.write(buf, 0, len)
+    outputStream.close()
+    inputStream.close()
+
+    return myFile
+}
\ No newline at end of file
